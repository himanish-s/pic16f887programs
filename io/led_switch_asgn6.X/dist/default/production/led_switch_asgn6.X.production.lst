

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon May 15 01:28:58 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Generated 22/03/2023 GMT
    12                           ; 
    13                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution. Publication is not required when
    27                           ;        this file is used in an embedded application.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F887 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45     0000                     	;# 
    46     0001                     	;# 
    47     0002                     	;# 
    48     0003                     	;# 
    49     0004                     	;# 
    50     0005                     	;# 
    51     0006                     	;# 
    52     0007                     	;# 
    53     0008                     	;# 
    54     0009                     	;# 
    55     000A                     	;# 
    56     000B                     	;# 
    57     000C                     	;# 
    58     000D                     	;# 
    59     000E                     	;# 
    60     000E                     	;# 
    61     000F                     	;# 
    62     0010                     	;# 
    63     0011                     	;# 
    64     0012                     	;# 
    65     0013                     	;# 
    66     0014                     	;# 
    67     0015                     	;# 
    68     0015                     	;# 
    69     0016                     	;# 
    70     0017                     	;# 
    71     0018                     	;# 
    72     0019                     	;# 
    73     001A                     	;# 
    74     001B                     	;# 
    75     001B                     	;# 
    76     001C                     	;# 
    77     001D                     	;# 
    78     001E                     	;# 
    79     001F                     	;# 
    80     0081                     	;# 
    81     0085                     	;# 
    82     0086                     	;# 
    83     0087                     	;# 
    84     0088                     	;# 
    85     0089                     	;# 
    86     008C                     	;# 
    87     008D                     	;# 
    88     008E                     	;# 
    89     008F                     	;# 
    90     0090                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0093                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0095                     	;# 
    98     0096                     	;# 
    99     0097                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009A                     	;# 
   103     009B                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     009F                     	;# 
   108     0105                     	;# 
   109     0107                     	;# 
   110     0108                     	;# 
   111     0109                     	;# 
   112     010C                     	;# 
   113     010C                     	;# 
   114     010D                     	;# 
   115     010E                     	;# 
   116     010F                     	;# 
   117     0185                     	;# 
   118     0187                     	;# 
   119     0188                     	;# 
   120     0189                     	;# 
   121     018C                     	;# 
   122     018D                     	;# 
   123     0000                     	;# 
   124     0001                     	;# 
   125     0002                     	;# 
   126     0003                     	;# 
   127     0004                     	;# 
   128     0005                     	;# 
   129     0006                     	;# 
   130     0007                     	;# 
   131     0008                     	;# 
   132     0009                     	;# 
   133     000A                     	;# 
   134     000B                     	;# 
   135     000C                     	;# 
   136     000D                     	;# 
   137     000E                     	;# 
   138     000E                     	;# 
   139     000F                     	;# 
   140     0010                     	;# 
   141     0011                     	;# 
   142     0012                     	;# 
   143     0013                     	;# 
   144     0014                     	;# 
   145     0015                     	;# 
   146     0015                     	;# 
   147     0016                     	;# 
   148     0017                     	;# 
   149     0018                     	;# 
   150     0019                     	;# 
   151     001A                     	;# 
   152     001B                     	;# 
   153     001B                     	;# 
   154     001C                     	;# 
   155     001D                     	;# 
   156     001E                     	;# 
   157     001F                     	;# 
   158     0081                     	;# 
   159     0085                     	;# 
   160     0086                     	;# 
   161     0087                     	;# 
   162     0088                     	;# 
   163     0089                     	;# 
   164     008C                     	;# 
   165     008D                     	;# 
   166     008E                     	;# 
   167     008F                     	;# 
   168     0090                     	;# 
   169     0091                     	;# 
   170     0092                     	;# 
   171     0093                     	;# 
   172     0093                     	;# 
   173     0093                     	;# 
   174     0094                     	;# 
   175     0095                     	;# 
   176     0096                     	;# 
   177     0097                     	;# 
   178     0098                     	;# 
   179     0099                     	;# 
   180     009A                     	;# 
   181     009B                     	;# 
   182     009C                     	;# 
   183     009D                     	;# 
   184     009E                     	;# 
   185     009F                     	;# 
   186     0105                     	;# 
   187     0107                     	;# 
   188     0108                     	;# 
   189     0109                     	;# 
   190     010C                     	;# 
   191     010C                     	;# 
   192     010D                     	;# 
   193     010E                     	;# 
   194     010F                     	;# 
   195     0185                     	;# 
   196     0187                     	;# 
   197     0188                     	;# 
   198     0189                     	;# 
   199     018C                     	;# 
   200     018D                     	;# 
   201     0007                     _PORTC	set	7
   202     003B                     _RC3	set	59
   203     003F                     _RC7	set	63
   204     003A                     _RC2	set	58
   205     003E                     _RC6	set	62
   206     0039                     _RC1	set	57
   207     003D                     _RC5	set	61
   208     0038                     _RC0	set	56
   209     003C                     _RC4	set	60
   210     0087                     _TRISC	set	135
   211     008F                     _OSCCON	set	143
   212     0847                     _C2ON	set	2119
   213     083F                     _C1ON	set	2111
   214     0189                     _ANSELH	set	393
   215     0188                     _ANSEL	set	392
   216                           
   217                           	psect	cinit
   218     07FC                     start_initialization:	
   219                           ; #config settings
   220                           
   221     07FC                     __initialization:
   222     07FC                     end_of_initialization:	
   223                           ;End of C runtime variable initialization code
   224                           
   225     07FC                     __end_of__initialization:
   226     07FC  0183               	clrf	3
   227     07FD  120A  118A  2F6D   	ljmp	_main	;jump to C main() function
   228                           
   229                           	psect	cstackCOMMON
   230     0070                     __pcstackCOMMON:
   231     0070                     ?_main:
   232     0070                     ??_main:	
   233                           ; 1 bytes @ 0x0
   234                           
   235                           
   236                           ; 1 bytes @ 0x0
   237     0070                     	ds	2
   238     0072                     main@count:
   239                           
   240                           ; 1 bytes @ 0x2
   241     0072                     	ds	1
   242                           
   243                           	psect	maintext
   244     076D                     __pmaintext:	
   245 ;;
   246 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   247 ;;
   248 ;; *************** function _main *****************
   249 ;; Defined at:
   250 ;;		line 12 in file "main.c"
   251 ;; Parameters:    Size  Location     Type
   252 ;;		None
   253 ;; Auto vars:     Size  Location     Type
   254 ;;  count           1    2[COMMON] unsigned char 
   255 ;; Return value:  Size  Location     Type
   256 ;;                  1    wreg      void 
   257 ;; Registers used:
   258 ;;		wreg, status,2, status,0
   259 ;; Tracked objects:
   260 ;;		On entry : B00/0
   261 ;;		On exit  : 0/0
   262 ;;		Unchanged: 0/0
   263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   264 ;;      Params:         0       0       0       0       0
   265 ;;      Locals:         1       0       0       0       0
   266 ;;      Temps:          2       0       0       0       0
   267 ;;      Totals:         3       0       0       0       0
   268 ;;Total ram usage:        3 bytes
   269 ;; This function calls:
   270 ;;		Nothing
   271 ;; This function is called by:
   272 ;;		Startup code after reset
   273 ;; This function uses a non-reentrant model
   274 ;;
   275                           
   276     076D                     _main:	
   277                           ;psect for function _main
   278                           
   279     076D                     l648:	
   280                           ;incstack = 0
   281                           ; Regs used in _main: [wreg+status,2+status,0]
   282                           
   283                           
   284                           ;main.c: 14:     unsigned char count;;main.c: 15:     OSCCON = 0b00000000;
   285     076D  1683               	bsf	3,5	;RP0=1, select bank1
   286     076E  1303               	bcf	3,6	;RP1=0, select bank1
   287     076F  018F               	clrf	15	;volatile
   288                           
   289                           ;main.c: 16:     ANSEL = 0b00000000;
   290     0770  1683               	bsf	3,5	;RP0=1, select bank3
   291     0771  1703               	bsf	3,6	;RP1=1, select bank3
   292     0772  0188               	clrf	8	;volatile
   293                           
   294                           ;main.c: 17:     ANSELH = 0b00000000;
   295     0773  0189               	clrf	9	;volatile
   296     0774                     l650:
   297                           
   298                           ;main.c: 22:     C1ON = 0b00000000;
   299     0774  1283               	bcf	3,5	;RP0=0, select bank2
   300     0775  1703               	bsf	3,6	;RP1=1, select bank2
   301     0776  1387               	bcf	7,7	;volatile
   302     0777                     l652:
   303                           
   304                           ;main.c: 23:     C2ON = 0b00000000;
   305     0777  1388               	bcf	8,7	;volatile
   306     0778                     l654:
   307                           
   308                           ;main.c: 30:     TRISC = 0b11110000;
   309     0778  30F0               	movlw	240
   310     0779  1683               	bsf	3,5	;RP0=1, select bank1
   311     077A  1303               	bcf	3,6	;RP1=0, select bank1
   312     077B  0087               	movwf	7	;volatile
   313     077C                     l656:
   314                           
   315                           ;main.c: 31:     PORTC = 0b11110000;
   316     077C  30F0               	movlw	240
   317     077D  1283               	bcf	3,5	;RP0=0, select bank0
   318     077E  1303               	bcf	3,6	;RP1=0, select bank0
   319     077F  0087               	movwf	7	;volatile
   320     0780                     l658:
   321                           
   322                           ;main.c: 35:         if (RC4 == 0) {
   323     0780  1A07               	btfsc	7,4	;volatile
   324     0781  2F83               	goto	u11
   325     0782  2F84               	goto	u10
   326     0783                     u11:
   327     0783  2F9E               	goto	l38
   328     0784                     u10:
   329     0784                     l660:
   330                           
   331                           ;main.c: 36:             _delay((unsigned long)((50)*(8000000/4000.0)));
   332     0784  3082               	movlw	130
   333     0785  00F1               	movwf	??_main+1
   334     0786  30DD               	movlw	221
   335     0787  00F0               	movwf	??_main
   336     0788                     u137:
   337     0788  0BF0               	decfsz	??_main,f
   338     0789  2F88               	goto	u137
   339     078A  0BF1               	decfsz	??_main+1,f
   340     078B  2F88               	goto	u137
   341     078C  2F8D               	nop2
   342     078D                     l662:
   343                           
   344                           ;main.c: 37:             if (RC4 == 0){
   345     078D  1283               	bcf	3,5	;RP0=0, select bank0
   346     078E  1303               	bcf	3,6	;RP1=0, select bank0
   347     078F  1A07               	btfsc	7,4	;volatile
   348     0790  2F92               	goto	u21
   349     0791  2F93               	goto	u20
   350     0792                     u21:
   351     0792  2F9E               	goto	l38
   352     0793                     u20:
   353     0793                     l664:
   354                           
   355                           ;main.c: 38:                 count++;
   356     0793  3001               	movlw	1
   357     0794  00F0               	movwf	??_main
   358     0795  0870               	movf	??_main,w
   359     0796  07F2               	addwf	main@count,f
   360     0797                     l666:
   361                           
   362                           ;main.c: 39:                 if (count%2 == 1){
   363     0797  1C72               	btfss	main@count,0
   364     0798  2F9A               	goto	u31
   365     0799  2F9B               	goto	u30
   366     079A                     u31:
   367     079A  2F9D               	goto	l40
   368     079B                     u30:
   369     079B                     l668:
   370                           
   371                           ;main.c: 40:                     RC0 = 1;
   372     079B  1407               	bsf	7,0	;volatile
   373                           
   374                           ;main.c: 41:                 }else{
   375     079C  2F9E               	goto	l38
   376     079D                     l40:
   377                           
   378                           ;main.c: 42:                     RC0 = 0;
   379     079D  1007               	bcf	7,0	;volatile
   380     079E                     l38:	
   381                           ;main.c: 45:         }
   382                           
   383                           
   384                           ;main.c: 46:         if (RC5 == 0) {
   385     079E  1A87               	btfsc	7,5	;volatile
   386     079F  2FA1               	goto	u41
   387     07A0  2FA2               	goto	u40
   388     07A1                     u41:
   389     07A1  2FBC               	goto	l42
   390     07A2                     u40:
   391     07A2                     l670:
   392                           
   393                           ;main.c: 47:             _delay((unsigned long)((50)*(8000000/4000.0)));
   394     07A2  3082               	movlw	130
   395     07A3  00F1               	movwf	??_main+1
   396     07A4  30DD               	movlw	221
   397     07A5  00F0               	movwf	??_main
   398     07A6                     u147:
   399     07A6  0BF0               	decfsz	??_main,f
   400     07A7  2FA6               	goto	u147
   401     07A8  0BF1               	decfsz	??_main+1,f
   402     07A9  2FA6               	goto	u147
   403     07AA  2FAB               	nop2
   404     07AB                     l672:
   405                           
   406                           ;main.c: 48:             if (RC5 == 0){
   407     07AB  1283               	bcf	3,5	;RP0=0, select bank0
   408     07AC  1303               	bcf	3,6	;RP1=0, select bank0
   409     07AD  1A87               	btfsc	7,5	;volatile
   410     07AE  2FB0               	goto	u51
   411     07AF  2FB1               	goto	u50
   412     07B0                     u51:
   413     07B0  2FBC               	goto	l42
   414     07B1                     u50:
   415     07B1                     l674:
   416                           
   417                           ;main.c: 49:                 count++;
   418     07B1  3001               	movlw	1
   419     07B2  00F0               	movwf	??_main
   420     07B3  0870               	movf	??_main,w
   421     07B4  07F2               	addwf	main@count,f
   422     07B5                     l676:
   423                           
   424                           ;main.c: 50:                 if (count%2 == 1){
   425     07B5  1C72               	btfss	main@count,0
   426     07B6  2FB8               	goto	u61
   427     07B7  2FB9               	goto	u60
   428     07B8                     u61:
   429     07B8  2FBB               	goto	l44
   430     07B9                     u60:
   431     07B9                     l678:
   432                           
   433                           ;main.c: 51:                     RC1 = 1;
   434     07B9  1487               	bsf	7,1	;volatile
   435                           
   436                           ;main.c: 52:                 }else{
   437     07BA  2FBC               	goto	l42
   438     07BB                     l44:
   439                           
   440                           ;main.c: 53:                     RC1 = 0;
   441     07BB  1087               	bcf	7,1	;volatile
   442     07BC                     l42:	
   443                           ;main.c: 56:         }
   444                           
   445                           
   446                           ;main.c: 57:         if (RC6 == 0) {
   447     07BC  1B07               	btfsc	7,6	;volatile
   448     07BD  2FBF               	goto	u71
   449     07BE  2FC0               	goto	u70
   450     07BF                     u71:
   451     07BF  2FDA               	goto	l46
   452     07C0                     u70:
   453     07C0                     l680:
   454                           
   455                           ;main.c: 58:             _delay((unsigned long)((50)*(8000000/4000.0)));
   456     07C0  3082               	movlw	130
   457     07C1  00F1               	movwf	??_main+1
   458     07C2  30DD               	movlw	221
   459     07C3  00F0               	movwf	??_main
   460     07C4                     u157:
   461     07C4  0BF0               	decfsz	??_main,f
   462     07C5  2FC4               	goto	u157
   463     07C6  0BF1               	decfsz	??_main+1,f
   464     07C7  2FC4               	goto	u157
   465     07C8  2FC9               	nop2
   466     07C9                     l682:
   467                           
   468                           ;main.c: 59:             if (RC6 == 0){
   469     07C9  1283               	bcf	3,5	;RP0=0, select bank0
   470     07CA  1303               	bcf	3,6	;RP1=0, select bank0
   471     07CB  1B07               	btfsc	7,6	;volatile
   472     07CC  2FCE               	goto	u81
   473     07CD  2FCF               	goto	u80
   474     07CE                     u81:
   475     07CE  2FDA               	goto	l46
   476     07CF                     u80:
   477     07CF                     l684:
   478                           
   479                           ;main.c: 60:                 count++;
   480     07CF  3001               	movlw	1
   481     07D0  00F0               	movwf	??_main
   482     07D1  0870               	movf	??_main,w
   483     07D2  07F2               	addwf	main@count,f
   484     07D3                     l686:
   485                           
   486                           ;main.c: 61:                 if (count%2 == 1){
   487     07D3  1C72               	btfss	main@count,0
   488     07D4  2FD6               	goto	u91
   489     07D5  2FD7               	goto	u90
   490     07D6                     u91:
   491     07D6  2FD9               	goto	l48
   492     07D7                     u90:
   493     07D7                     l688:
   494                           
   495                           ;main.c: 62:                     RC2 = 1;
   496     07D7  1507               	bsf	7,2	;volatile
   497                           
   498                           ;main.c: 63:                 }else{
   499     07D8  2FDA               	goto	l46
   500     07D9                     l48:
   501                           
   502                           ;main.c: 64:                     RC2 = 0;
   503     07D9  1107               	bcf	7,2	;volatile
   504     07DA                     l46:	
   505                           ;main.c: 67:         }
   506                           
   507                           
   508                           ;main.c: 68:         if (RC7 == 0) {
   509     07DA  1B87               	btfsc	7,7	;volatile
   510     07DB  2FDD               	goto	u101
   511     07DC  2FDE               	goto	u100
   512     07DD                     u101:
   513     07DD  2F80               	goto	l658
   514     07DE                     u100:
   515     07DE                     l690:
   516                           
   517                           ;main.c: 69:             _delay((unsigned long)((50)*(8000000/4000.0)));
   518     07DE  3082               	movlw	130
   519     07DF  00F1               	movwf	??_main+1
   520     07E0  30DD               	movlw	221
   521     07E1  00F0               	movwf	??_main
   522     07E2                     u167:
   523     07E2  0BF0               	decfsz	??_main,f
   524     07E3  2FE2               	goto	u167
   525     07E4  0BF1               	decfsz	??_main+1,f
   526     07E5  2FE2               	goto	u167
   527     07E6  2FE7               	nop2
   528     07E7                     l692:
   529                           
   530                           ;main.c: 70:             if (RC7 == 0){
   531     07E7  1283               	bcf	3,5	;RP0=0, select bank0
   532     07E8  1303               	bcf	3,6	;RP1=0, select bank0
   533     07E9  1B87               	btfsc	7,7	;volatile
   534     07EA  2FEC               	goto	u111
   535     07EB  2FED               	goto	u110
   536     07EC                     u111:
   537     07EC  2F80               	goto	l658
   538     07ED                     u110:
   539     07ED                     l694:
   540                           
   541                           ;main.c: 71:                 count++;
   542     07ED  3001               	movlw	1
   543     07EE  00F0               	movwf	??_main
   544     07EF  0870               	movf	??_main,w
   545     07F0  07F2               	addwf	main@count,f
   546     07F1                     l696:
   547                           
   548                           ;main.c: 72:                 if (count%2 == 1){
   549     07F1  1C72               	btfss	main@count,0
   550     07F2  2FF4               	goto	u121
   551     07F3  2FF5               	goto	u120
   552     07F4                     u121:
   553     07F4  2FF7               	goto	l52
   554     07F5                     u120:
   555     07F5                     l698:
   556                           
   557                           ;main.c: 73:                     RC3 = 1;
   558     07F5  1587               	bsf	7,3	;volatile
   559                           
   560                           ;main.c: 74:                 }else{
   561     07F6  2F80               	goto	l658
   562     07F7                     l52:
   563                           
   564                           ;main.c: 75:                     RC3 = 0;
   565     07F7  1187               	bcf	7,3	;volatile
   566     07F8  2F80               	goto	l658
   567     07F9  120A  118A  2800   	ljmp	start
   568     07FC                     __end_of_main:
   569     007E                     btemp	set	126	;btemp
   570     007E                     wtemp0	set	126
   571                           
   572                           	psect	idloc
   573                           
   574                           ;Config register IDLOC0 @ 0x2000
   575                           ;	unspecified, using default values
   576     2000                     	org	8192
   577     2000  3FFF               	dw	16383
   578                           
   579                           ;Config register IDLOC1 @ 0x2001
   580                           ;	unspecified, using default values
   581     2001                     	org	8193
   582     2001  3FFF               	dw	16383
   583                           
   584                           ;Config register IDLOC2 @ 0x2002
   585                           ;	unspecified, using default values
   586     2002                     	org	8194
   587     2002  3FFF               	dw	16383
   588                           
   589                           ;Config register IDLOC3 @ 0x2003
   590                           ;	unspecified, using default values
   591     2003                     	org	8195
   592     2003  3FFF               	dw	16383
   593                           
   594                           	psect	config
   595                           
   596                           ;Config register CONFIG1 @ 0x2007
   597                           ;	Oscillator Selection bits
   598                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   599                           ;	Watchdog Timer Enable bit
   600                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   601                           ;	Power-up Timer Enable bit
   602                           ;	PWRTE = ON, PWRT enabled
   603                           ;	RE3/MCLR pin function select bit
   604                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   605                           ;	Code Protection bit
   606                           ;	CP = ON, Program memory code protection is enabled
   607                           ;	Data Code Protection bit
   608                           ;	CPD = ON, Data memory code protection is enabled
   609                           ;	Brown Out Reset Selection bits
   610                           ;	BOREN = ON, BOR enabled
   611                           ;	Internal External Switchover bit
   612                           ;	IESO = ON, Internal/External Switchover mode is enabled
   613                           ;	Fail-Safe Clock Monitor Enabled bit
   614                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   615                           ;	Low Voltage Programming Enable bit
   616                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   617                           ;	In-Circuit Debugger Mode bit
   618                           ;	DEBUG = 0x1, unprogrammed default
   619     2007                     	org	8199
   620     2007  2F04               	dw	12036
   621                           
   622                           ;Config register CONFIG2 @ 0x2008
   623                           ;	Brown-out Reset Selection bit
   624                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   625                           ;	Flash Program Memory Self Write Enable bits
   626                           ;	WRT = OFF, Write protection off
   627     2008                     	org	8200
   628     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      60
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon May 15 01:28:58 2023

                     l40 079D                       l42 07BC                       l52 07F7  
                     l44 07BB                       l46 07DA                       l38 079E  
                     l48 07D9                       u10 0784                       u11 0783  
                     u20 0793                       u21 0792                       u30 079B  
                     u31 079A                       u40 07A2                       u41 07A1  
                     u50 07B1                       u51 07B0                       u60 07B9  
                     u61 07B8                       u70 07C0                       u71 07BF  
                     u80 07CF                       u81 07CE                       u90 07D7  
                     u91 07D6                      l650 0774                      l660 0784  
                    l652 0777                      l670 07A2                      l662 078D  
                    l654 0778                      l680 07C0                      l672 07AB  
                    l664 0793                      l656 077C                      l648 076D  
                    l690 07DE                      l682 07C9                      l674 07B1  
                    l666 0797                      l658 0780                      l692 07E7  
                    l684 07CF                      l676 07B5                      l668 079B  
                    l694 07ED                      l686 07D3                      l678 07B9  
                    l696 07F1                      l688 07D7                      l698 07F5  
                    _RC0 0038                      _RC1 0039                      _RC2 003A  
                    _RC3 003B                      _RC4 003C                      _RC5 003D  
                    u100 07DE                      _RC6 003E                      u101 07DD  
                    _RC7 003F                      u110 07ED                      u111 07EC  
                    u120 07F5                      u121 07F4                      u137 0788  
                    u147 07A6                      u157 07C4                      u167 07E2  
                   _C1ON 083F                     _C2ON 0847                     _main 076D  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTC 0007                    _TRISC 0087  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0070                   _ANSELH 0189  
                 _OSCCON 008F  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 076D     end_of_initialization 07FC      start_initialization 07FC  
              ___latbits 0002                main@count 0072  
