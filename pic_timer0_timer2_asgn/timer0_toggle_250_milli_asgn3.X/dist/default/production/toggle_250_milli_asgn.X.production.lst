

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue May 16 13:43:14 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Version 2.40
    12                           ; Generated 17/11/2021 GMT
    13                           ; 
    14                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F887 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     008F                     	;# 
    91     0090                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0093                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0095                     	;# 
    99     0096                     	;# 
   100     0097                     	;# 
   101     0098                     	;# 
   102     0099                     	;# 
   103     009A                     	;# 
   104     009B                     	;# 
   105     009C                     	;# 
   106     009D                     	;# 
   107     009E                     	;# 
   108     009F                     	;# 
   109     0105                     	;# 
   110     0107                     	;# 
   111     0108                     	;# 
   112     0109                     	;# 
   113     010C                     	;# 
   114     010C                     	;# 
   115     010D                     	;# 
   116     010E                     	;# 
   117     010F                     	;# 
   118     0185                     	;# 
   119     0187                     	;# 
   120     0188                     	;# 
   121     0189                     	;# 
   122     018C                     	;# 
   123     018D                     	;# 
   124     0000                     	;# 
   125     0001                     	;# 
   126     0002                     	;# 
   127     0003                     	;# 
   128     0004                     	;# 
   129     0005                     	;# 
   130     0006                     	;# 
   131     0007                     	;# 
   132     0008                     	;# 
   133     0009                     	;# 
   134     000A                     	;# 
   135     000B                     	;# 
   136     000C                     	;# 
   137     000D                     	;# 
   138     000E                     	;# 
   139     000E                     	;# 
   140     000F                     	;# 
   141     0010                     	;# 
   142     0011                     	;# 
   143     0012                     	;# 
   144     0013                     	;# 
   145     0014                     	;# 
   146     0015                     	;# 
   147     0015                     	;# 
   148     0016                     	;# 
   149     0017                     	;# 
   150     0018                     	;# 
   151     0019                     	;# 
   152     001A                     	;# 
   153     001B                     	;# 
   154     001B                     	;# 
   155     001C                     	;# 
   156     001D                     	;# 
   157     001E                     	;# 
   158     001F                     	;# 
   159     0081                     	;# 
   160     0085                     	;# 
   161     0086                     	;# 
   162     0087                     	;# 
   163     0088                     	;# 
   164     0089                     	;# 
   165     008C                     	;# 
   166     008D                     	;# 
   167     008E                     	;# 
   168     008F                     	;# 
   169     0090                     	;# 
   170     0091                     	;# 
   171     0092                     	;# 
   172     0093                     	;# 
   173     0093                     	;# 
   174     0093                     	;# 
   175     0094                     	;# 
   176     0095                     	;# 
   177     0096                     	;# 
   178     0097                     	;# 
   179     0098                     	;# 
   180     0099                     	;# 
   181     009A                     	;# 
   182     009B                     	;# 
   183     009C                     	;# 
   184     009D                     	;# 
   185     009E                     	;# 
   186     009F                     	;# 
   187     0105                     	;# 
   188     0107                     	;# 
   189     0108                     	;# 
   190     0109                     	;# 
   191     010C                     	;# 
   192     010C                     	;# 
   193     010D                     	;# 
   194     010E                     	;# 
   195     010F                     	;# 
   196     0185                     	;# 
   197     0187                     	;# 
   198     0188                     	;# 
   199     0189                     	;# 
   200     018C                     	;# 
   201     018D                     	;# 
   202     0001                     _TMR0	set	1
   203     0007                     _PORTC	set	7
   204     0006                     _PORTB	set	6
   205     0039                     _RC1	set	57
   206     0038                     _RC0	set	56
   207     005A                     _TMR0IF	set	90
   208     0081                     _OPTION_REG	set	129
   209     0087                     _TRISC	set	135
   210     0086                     _TRISB	set	134
   211     008F                     _OSCCON	set	143
   212     0847                     _C2ON	set	2119
   213     083F                     _C1ON	set	2111
   214     0189                     _ANSELH	set	393
   215     0188                     _ANSEL	set	392
   216                           
   217                           	psect	cinit
   218     07FC                     start_initialization:	
   219                           ; #config settings
   220                           
   221     07FC                     __initialization:
   222     07FC                     end_of_initialization:	
   223                           ;End of C runtime variable initialization code
   224                           
   225     07FC                     __end_of__initialization:
   226     07FC  0183               	clrf	3
   227     07FD  120A  118A  2FB5   	ljmp	_main	;jump to C main() function
   228                           
   229                           	psect	cstackCOMMON
   230     0070                     __pcstackCOMMON:
   231     0070                     ?_main:
   232     0070                     ??_main:	
   233                           ; 1 bytes @ 0x0
   234                           
   235                           
   236                           ; 1 bytes @ 0x0
   237     0070                     	ds	1
   238     0071                     main@count:
   239                           
   240                           ; 2 bytes @ 0x1
   241     0071                     	ds	2
   242     0073                     main@val:
   243                           
   244                           ; 1 bytes @ 0x3
   245     0073                     	ds	1
   246                           
   247                           	psect	maintext
   248     07B5                     __pmaintext:	
   249 ;;
   250 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   251 ;;
   252 ;; *************** function _main *****************
   253 ;; Defined at:
   254 ;;		line 11 in file "main.c"
   255 ;; Parameters:    Size  Location     Type
   256 ;;		None
   257 ;; Auto vars:     Size  Location     Type
   258 ;;  count           2    1[COMMON] unsigned int 
   259 ;;  val             1    3[COMMON] unsigned char 
   260 ;; Return value:  Size  Location     Type
   261 ;;                  1    wreg      void 
   262 ;; Registers used:
   263 ;;		wreg, status,2, status,0
   264 ;; Tracked objects:
   265 ;;		On entry : B00/0
   266 ;;		On exit  : 0/0
   267 ;;		Unchanged: 0/0
   268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   269 ;;      Params:         0       0       0       0       0
   270 ;;      Locals:         3       0       0       0       0
   271 ;;      Temps:          1       0       0       0       0
   272 ;;      Totals:         4       0       0       0       0
   273 ;;Total ram usage:        4 bytes
   274 ;; This function calls:
   275 ;;		Nothing
   276 ;; This function is called by:
   277 ;;		Startup code after reset
   278 ;; This function uses a non-reentrant model
   279 ;;
   280                           
   281     07B5                     _main:	
   282                           ;psect for function _main
   283                           
   284     07B5                     l630:	
   285                           ;incstack = 0
   286                           ; Regs used in _main: [wreg+status,2+status,0]
   287                           
   288                           
   289                           ;main.c: 13:     unsigned int count;;main.c: 14:     unsigned char val;;main.c: 16:     
      +                          ANSEL = 0b00000000;
   290     07B5  1683               	bsf	3,5	;RP0=1, select bank3
   291     07B6  1703               	bsf	3,6	;RP1=1, select bank3
   292     07B7  0188               	clrf	8	;volatile
   293                           
   294                           ;main.c: 17:     ANSELH = 0b00000000;
   295     07B8  0189               	clrf	9	;volatile
   296     07B9                     l632:
   297                           
   298                           ;main.c: 18:     C1ON = 0b00000000;
   299     07B9  1283               	bcf	3,5	;RP0=0, select bank2
   300     07BA  1703               	bsf	3,6	;RP1=1, select bank2
   301     07BB  1387               	bcf	7,7	;volatile
   302     07BC                     l634:
   303                           
   304                           ;main.c: 19:     C2ON = 0b00000000;
   305     07BC  1388               	bcf	8,7	;volatile
   306     07BD                     l636:
   307                           
   308                           ;main.c: 20:     OSCCON = 0b01110110;
   309     07BD  3076               	movlw	118
   310     07BE  1683               	bsf	3,5	;RP0=1, select bank1
   311     07BF  1303               	bcf	3,6	;RP1=0, select bank1
   312     07C0  008F               	movwf	15	;volatile
   313     07C1                     l638:
   314                           
   315                           ;main.c: 22:     TRISB = 0b00000000;
   316     07C1  0186               	clrf	6	;volatile
   317     07C2                     l640:
   318                           
   319                           ;main.c: 23:     PORTB = 0b00000000;
   320     07C2  1283               	bcf	3,5	;RP0=0, select bank0
   321     07C3  1303               	bcf	3,6	;RP1=0, select bank0
   322     07C4  0186               	clrf	6	;volatile
   323     07C5                     l642:
   324                           
   325                           ;main.c: 24:     val = PORTB;
   326     07C5  0806               	movf	6,w	;volatile
   327     07C6  00F3               	movwf	main@val
   328                           
   329                           ;main.c: 26:     TRISC = 0b00000000;
   330     07C7  1683               	bsf	3,5	;RP0=1, select bank1
   331     07C8  1303               	bcf	3,6	;RP1=0, select bank1
   332     07C9  0187               	clrf	7	;volatile
   333                           
   334                           ;main.c: 27:     PORTC = 0b00000000;
   335     07CA  1283               	bcf	3,5	;RP0=0, select bank0
   336     07CB  1303               	bcf	3,6	;RP1=0, select bank0
   337     07CC  0187               	clrf	7	;volatile
   338     07CD                     l644:
   339                           
   340                           ;main.c: 29:     OPTION_REG = 0b00000010;
   341     07CD  3002               	movlw	2
   342     07CE  1683               	bsf	3,5	;RP0=1, select bank1
   343     07CF  1303               	bcf	3,6	;RP1=0, select bank1
   344     07D0  0081               	movwf	1	;volatile
   345     07D1                     l646:
   346                           
   347                           ;main.c: 30:     TMR0 = 217;
   348     07D1  30D9               	movlw	217
   349     07D2  1283               	bcf	3,5	;RP0=0, select bank0
   350     07D3  1303               	bcf	3,6	;RP1=0, select bank0
   351     07D4  0081               	movwf	1	;volatile
   352     07D5                     l648:
   353                           
   354                           ;main.c: 31:     TMR0IF = 0;
   355     07D5  110B               	bcf	11,2	;volatile
   356     07D6                     l650:
   357                           
   358                           ;main.c: 36:          if (TMR0IF==1){
   359     07D6  1D0B               	btfss	11,2	;volatile
   360     07D7  2FD9               	goto	u11
   361     07D8  2FDA               	goto	u10
   362     07D9                     u11:
   363     07D9  2FD6               	goto	l650
   364     07DA                     u10:
   365     07DA                     l652:
   366                           
   367                           ;main.c: 38:             TMR0IF = 0;
   368     07DA  110B               	bcf	11,2	;volatile
   369     07DB                     l654:
   370                           
   371                           ;main.c: 39:             TMR0 = 6;
   372     07DB  3006               	movlw	6
   373     07DC  1283               	bcf	3,5	;RP0=0, select bank0
   374     07DD  1303               	bcf	3,6	;RP1=0, select bank0
   375     07DE  0081               	movwf	1	;volatile
   376                           
   377                           ;main.c: 40:             RC0 =! RC0;
   378     07DF  3001               	movlw	1
   379     07E0  0687               	xorwf	7,f
   380                           
   381                           ;main.c: 41:             count++;
   382     07E1  3001               	movlw	1
   383     07E2  07F1               	addwf	main@count,f
   384     07E3  1803               	skipnc
   385     07E4  0AF2               	incf	main@count+1,f
   386     07E5  3000               	movlw	0
   387     07E6  07F2               	addwf	main@count+1,f
   388     07E7                     l656:
   389                           
   390                           ;main.c: 43:             if (count == 250){
   391     07E7  30FA               	movlw	250
   392     07E8  0671               	xorwf	main@count,w
   393     07E9  0472               	iorwf	main@count+1,w
   394     07EA  1D03               	btfss	3,2
   395     07EB  2FED               	goto	u21
   396     07EC  2FEE               	goto	u20
   397     07ED                     u21:
   398     07ED  2FD6               	goto	l650
   399     07EE                     u20:
   400     07EE                     l658:
   401                           
   402                           ;main.c: 44:                 count = 0;
   403     07EE  01F1               	clrf	main@count
   404     07EF  01F2               	clrf	main@count+1
   405     07F0                     l660:
   406                           
   407                           ;main.c: 45:                 RC1 =! RC1;
   408     07F0  3002               	movlw	2
   409     07F1  0687               	xorwf	7,f
   410     07F2                     l662:
   411                           
   412                           ;main.c: 46:                 PORTB = val;
   413     07F2  0873               	movf	main@val,w
   414     07F3  0086               	movwf	6	;volatile
   415     07F4                     l664:
   416                           
   417                           ;main.c: 47:                 val++;
   418     07F4  3001               	movlw	1
   419     07F5  00F0               	movwf	??_main
   420     07F6  0870               	movf	??_main,w
   421     07F7  07F3               	addwf	main@val,f
   422     07F8  2FD6               	goto	l650
   423     07F9  120A  118A  2800   	ljmp	start
   424     07FC                     __end_of_main:
   425     007E                     btemp	set	126	;btemp
   426     007E                     wtemp0	set	126
   427                           
   428                           	psect	idloc
   429                           
   430                           ;Config register IDLOC0 @ 0x2000
   431                           ;	unspecified, using default values
   432     2000                     	org	8192
   433     2000  3FFF               	dw	16383
   434                           
   435                           ;Config register IDLOC1 @ 0x2001
   436                           ;	unspecified, using default values
   437     2001                     	org	8193
   438     2001  3FFF               	dw	16383
   439                           
   440                           ;Config register IDLOC2 @ 0x2002
   441                           ;	unspecified, using default values
   442     2002                     	org	8194
   443     2002  3FFF               	dw	16383
   444                           
   445                           ;Config register IDLOC3 @ 0x2003
   446                           ;	unspecified, using default values
   447     2003                     	org	8195
   448     2003  3FFF               	dw	16383
   449                           
   450                           	psect	config
   451                           
   452                           ;Config register CONFIG1 @ 0x2007
   453                           ;	Oscillator Selection bits
   454                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   455                           ;	Watchdog Timer Enable bit
   456                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   457                           ;	Power-up Timer Enable bit
   458                           ;	PWRTE = ON, PWRT enabled
   459                           ;	RE3/MCLR pin function select bit
   460                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   461                           ;	Code Protection bit
   462                           ;	CP = ON, Program memory code protection is enabled
   463                           ;	Data Code Protection bit
   464                           ;	CPD = ON, Data memory code protection is enabled
   465                           ;	Brown Out Reset Selection bits
   466                           ;	BOREN = ON, BOR enabled
   467                           ;	Internal External Switchover bit
   468                           ;	IESO = ON, Internal/External Switchover mode is enabled
   469                           ;	Fail-Safe Clock Monitor Enabled bit
   470                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   471                           ;	Low Voltage Programming Enable bit
   472                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   473                           ;	In-Circuit Debugger Mode bit
   474                           ;	DEBUG = 0x1, unprogrammed default
   475     2007                     	org	8199
   476     2007  2F04               	dw	12036
   477                           
   478                           ;Config register CONFIG2 @ 0x2008
   479                           ;	Brown-out Reset Selection bit
   480                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   481                           ;	Flash Program Memory Self Write Enable bits
   482                           ;	WRT = OFF, Write protection off
   483     2008                     	org	8200
   484     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      30
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue May 16 13:43:14 2023

                     u10 07DA                       u11 07D9                       u20 07EE  
                     u21 07ED                      l630 07B5                      l640 07C2  
                    l632 07B9                      l650 07D6                      l642 07C5  
                    l634 07BC                      l660 07F0                      l652 07DA  
                    l644 07CD                      l636 07BD                      l662 07F2  
                    l654 07DB                      l646 07D1                      l638 07C1  
                    l664 07F4                      l656 07E7                      l648 07D5  
                    l658 07EE                      _RC0 0038                      _RC1 0039  
                   _C1ON 083F                     _C2ON 0847                     _TMR0 0001  
                   _main 07B5                     btemp 007E                     start 0000  
                  ?_main 0070                    _ANSEL 0188                    _PORTB 0006  
                  _PORTC 0007                    _TRISB 0086                    _TRISC 0087  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0070                   _ANSELH 0189  
                 _OSCCON 008F                   _TMR0IF 005A  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 07B5                  main@val 0073  
   end_of_initialization 07FC      start_initialization 07FC                ___latbits 0002  
              main@count 0071               _OPTION_REG 0081  
