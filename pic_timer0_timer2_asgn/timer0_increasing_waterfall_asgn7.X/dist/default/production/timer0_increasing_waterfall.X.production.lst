

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue May 16 03:00:30 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Generated 22/03/2023 GMT
    12                           ; 
    13                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution. Publication is not required when
    27                           ;        this file is used in an embedded application.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F887 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45     0000                     	;# 
    46     0001                     	;# 
    47     0002                     	;# 
    48     0003                     	;# 
    49     0004                     	;# 
    50     0005                     	;# 
    51     0006                     	;# 
    52     0007                     	;# 
    53     0008                     	;# 
    54     0009                     	;# 
    55     000A                     	;# 
    56     000B                     	;# 
    57     000C                     	;# 
    58     000D                     	;# 
    59     000E                     	;# 
    60     000E                     	;# 
    61     000F                     	;# 
    62     0010                     	;# 
    63     0011                     	;# 
    64     0012                     	;# 
    65     0013                     	;# 
    66     0014                     	;# 
    67     0015                     	;# 
    68     0015                     	;# 
    69     0016                     	;# 
    70     0017                     	;# 
    71     0018                     	;# 
    72     0019                     	;# 
    73     001A                     	;# 
    74     001B                     	;# 
    75     001B                     	;# 
    76     001C                     	;# 
    77     001D                     	;# 
    78     001E                     	;# 
    79     001F                     	;# 
    80     0081                     	;# 
    81     0085                     	;# 
    82     0086                     	;# 
    83     0087                     	;# 
    84     0088                     	;# 
    85     0089                     	;# 
    86     008C                     	;# 
    87     008D                     	;# 
    88     008E                     	;# 
    89     008F                     	;# 
    90     0090                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0093                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0095                     	;# 
    98     0096                     	;# 
    99     0097                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009A                     	;# 
   103     009B                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     009F                     	;# 
   108     0105                     	;# 
   109     0107                     	;# 
   110     0108                     	;# 
   111     0109                     	;# 
   112     010C                     	;# 
   113     010C                     	;# 
   114     010D                     	;# 
   115     010E                     	;# 
   116     010F                     	;# 
   117     0185                     	;# 
   118     0187                     	;# 
   119     0188                     	;# 
   120     0189                     	;# 
   121     018C                     	;# 
   122     018D                     	;# 
   123     0000                     	;# 
   124     0001                     	;# 
   125     0002                     	;# 
   126     0003                     	;# 
   127     0004                     	;# 
   128     0005                     	;# 
   129     0006                     	;# 
   130     0007                     	;# 
   131     0008                     	;# 
   132     0009                     	;# 
   133     000A                     	;# 
   134     000B                     	;# 
   135     000C                     	;# 
   136     000D                     	;# 
   137     000E                     	;# 
   138     000E                     	;# 
   139     000F                     	;# 
   140     0010                     	;# 
   141     0011                     	;# 
   142     0012                     	;# 
   143     0013                     	;# 
   144     0014                     	;# 
   145     0015                     	;# 
   146     0015                     	;# 
   147     0016                     	;# 
   148     0017                     	;# 
   149     0018                     	;# 
   150     0019                     	;# 
   151     001A                     	;# 
   152     001B                     	;# 
   153     001B                     	;# 
   154     001C                     	;# 
   155     001D                     	;# 
   156     001E                     	;# 
   157     001F                     	;# 
   158     0081                     	;# 
   159     0085                     	;# 
   160     0086                     	;# 
   161     0087                     	;# 
   162     0088                     	;# 
   163     0089                     	;# 
   164     008C                     	;# 
   165     008D                     	;# 
   166     008E                     	;# 
   167     008F                     	;# 
   168     0090                     	;# 
   169     0091                     	;# 
   170     0092                     	;# 
   171     0093                     	;# 
   172     0093                     	;# 
   173     0093                     	;# 
   174     0094                     	;# 
   175     0095                     	;# 
   176     0096                     	;# 
   177     0097                     	;# 
   178     0098                     	;# 
   179     0099                     	;# 
   180     009A                     	;# 
   181     009B                     	;# 
   182     009C                     	;# 
   183     009D                     	;# 
   184     009E                     	;# 
   185     009F                     	;# 
   186     0105                     	;# 
   187     0107                     	;# 
   188     0108                     	;# 
   189     0109                     	;# 
   190     010C                     	;# 
   191     010C                     	;# 
   192     010D                     	;# 
   193     010E                     	;# 
   194     010F                     	;# 
   195     0185                     	;# 
   196     0187                     	;# 
   197     0188                     	;# 
   198     0189                     	;# 
   199     018C                     	;# 
   200     018D                     	;# 
   201     0001                     _TMR0	set	1
   202     0007                     _PORTC	set	7
   203     005A                     _TMR0IF	set	90
   204     0081                     _OPTION_REG	set	129
   205     0087                     _TRISC	set	135
   206     008F                     _OSCCON	set	143
   207     0847                     _C2ON	set	2119
   208     083F                     _C1ON	set	2111
   209     0189                     _ANSELH	set	393
   210     0188                     _ANSEL	set	392
   211                           
   212                           	psect	cinit
   213     07FC                     start_initialization:	
   214                           ; #config settings
   215                           
   216     07FC                     __initialization:
   217     07FC                     end_of_initialization:	
   218                           ;End of C runtime variable initialization code
   219                           
   220     07FC                     __end_of__initialization:
   221     07FC  0183               	clrf	3
   222     07FD  120A  118A  2F76   	ljmp	_main	;jump to C main() function
   223                           
   224                           	psect	cstackCOMMON
   225     0070                     __pcstackCOMMON:
   226     0070                     ?_main:
   227     0070                     ??_main:	
   228                           ; 1 bytes @ 0x0
   229                           
   230                           
   231                           ; 1 bytes @ 0x0
   232     0070                     	ds	2
   233     0072                     main@count:
   234                           
   235                           ; 1 bytes @ 0x2
   236     0072                     	ds	1
   237     0073                     main@val:
   238                           
   239                           ; 1 bytes @ 0x3
   240     0073                     	ds	1
   241     0074                     main@s:
   242                           
   243                           ; 1 bytes @ 0x4
   244     0074                     	ds	1
   245                           
   246                           	psect	maintext
   247     0776                     __pmaintext:	
   248 ;;
   249 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   250 ;;
   251 ;; *************** function _main *****************
   252 ;; Defined at:
   253 ;;		line 20 in file "timer0_increase_waterfall.c"
   254 ;; Parameters:    Size  Location     Type
   255 ;;		None
   256 ;; Auto vars:     Size  Location     Type
   257 ;;  s               1    4[COMMON] unsigned char 
   258 ;;  val             1    3[COMMON] unsigned char 
   259 ;;  count           1    2[COMMON] unsigned char 
   260 ;;  i               1    0        unsigned char 
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   265 ;; Tracked objects:
   266 ;;		On entry : B00/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   270 ;;      Params:         0       0       0       0       0
   271 ;;      Locals:         3       0       0       0       0
   272 ;;      Temps:          2       0       0       0       0
   273 ;;      Totals:         5       0       0       0       0
   274 ;;Total ram usage:        5 bytes
   275 ;; This function calls:
   276 ;;		Nothing
   277 ;; This function is called by:
   278 ;;		Startup code after reset
   279 ;; This function uses a non-reentrant model
   280 ;;
   281                           
   282     0776                     _main:	
   283                           ;psect for function _main
   284                           
   285     0776                     l634:	
   286                           ;incstack = 0
   287                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   288                           
   289                           
   290                           ;timer0_increase_waterfall.c: 23:     OSCCON = 0b01110110;
   291     0776  3076               	movlw	118
   292     0777  1683               	bsf	3,5	;RP0=1, select bank1
   293     0778  1303               	bcf	3,6	;RP1=0, select bank1
   294     0779  008F               	movwf	15	;volatile
   295     077A                     l636:
   296                           
   297                           ;timer0_increase_waterfall.c: 27:     ANSEL = 0b00000000;
   298     077A  1683               	bsf	3,5	;RP0=1, select bank3
   299     077B  1703               	bsf	3,6	;RP1=1, select bank3
   300     077C  0188               	clrf	8	;volatile
   301     077D                     l638:
   302                           
   303                           ;timer0_increase_waterfall.c: 28:     ANSELH = 0b00000000;
   304     077D  0189               	clrf	9	;volatile
   305     077E                     l640:
   306                           
   307                           ;timer0_increase_waterfall.c: 34:     C1ON = 0;
   308     077E  1283               	bcf	3,5	;RP0=0, select bank2
   309     077F  1703               	bsf	3,6	;RP1=1, select bank2
   310     0780  1387               	bcf	7,7	;volatile
   311     0781                     l642:
   312                           
   313                           ;timer0_increase_waterfall.c: 35:     C2ON = 0;
   314     0781  1388               	bcf	8,7	;volatile
   315     0782                     l644:
   316                           
   317                           ;timer0_increase_waterfall.c: 39:     TRISC = 0b00000000;
   318     0782  1683               	bsf	3,5	;RP0=1, select bank1
   319     0783  1303               	bcf	3,6	;RP1=0, select bank1
   320     0784  0187               	clrf	7	;volatile
   321     0785                     l646:
   322                           
   323                           ;timer0_increase_waterfall.c: 40:     PORTC = 0b00000000;
   324     0785  1283               	bcf	3,5	;RP0=0, select bank0
   325     0786  1303               	bcf	3,6	;RP1=0, select bank0
   326     0787  0187               	clrf	7	;volatile
   327                           
   328                           ;timer0_increase_waterfall.c: 42:     OPTION_REG = 0b00000010;
   329     0788  3002               	movlw	2
   330     0789  1683               	bsf	3,5	;RP0=1, select bank1
   331     078A  1303               	bcf	3,6	;RP1=0, select bank1
   332     078B  0081               	movwf	1	;volatile
   333                           
   334                           ;timer0_increase_waterfall.c: 47:     TMR0 = 6;
   335     078C  3006               	movlw	6
   336     078D  1283               	bcf	3,5	;RP0=0, select bank0
   337     078E  1303               	bcf	3,6	;RP1=0, select bank0
   338     078F  0081               	movwf	1	;volatile
   339     0790                     l648:
   340                           
   341                           ;timer0_increase_waterfall.c: 48:     TMR0IF = 0;
   342     0790  110B               	bcf	11,2	;volatile
   343     0791                     l650:
   344                           
   345                           ;timer0_increase_waterfall.c: 50:     unsigned char count;;timer0_increase_waterfall.c: 
      +                          51:     unsigned char s = 1;
   346     0791  01F4               	clrf	main@s
   347     0792  0AF4               	incf	main@s,f
   348     0793                     l652:
   349     0793                     l654:
   350     0793                     l656:
   351                           
   352                           ;timer0_increase_waterfall.c: 58:     PORTC = 0b10000000;
   353     0793  3080               	movlw	128
   354     0794  0087               	movwf	7	;volatile
   355     0795                     l658:
   356                           
   357                           ;timer0_increase_waterfall.c: 62:         if (TMR0IF == 1) {
   358     0795  1D0B               	btfss	11,2	;volatile
   359     0796  2F98               	goto	u11
   360     0797  2F99               	goto	u10
   361     0798                     u11:
   362     0798  2F95               	goto	l658
   363     0799                     u10:
   364     0799                     l660:
   365                           
   366                           ;timer0_increase_waterfall.c: 64:             TMR0IF = 0;
   367     0799  110B               	bcf	11,2	;volatile
   368     079A                     l662:
   369                           
   370                           ;timer0_increase_waterfall.c: 65:             TMR0 = 6;
   371     079A  3006               	movlw	6
   372     079B  1283               	bcf	3,5	;RP0=0, select bank0
   373     079C  1303               	bcf	3,6	;RP1=0, select bank0
   374     079D  0081               	movwf	1	;volatile
   375     079E                     l664:
   376                           
   377                           ;timer0_increase_waterfall.c: 66:             count++;
   378     079E  3001               	movlw	1
   379     079F  00F0               	movwf	??_main
   380     07A0  0870               	movf	??_main,w
   381     07A1  07F2               	addwf	main@count,f
   382     07A2                     l666:
   383                           
   384                           ;timer0_increase_waterfall.c: 68:             if (count == 100) {
   385     07A2  3064               	movlw	100
   386     07A3  0672               	xorwf	main@count,w
   387     07A4  1D03               	btfss	3,2
   388     07A5  2FA7               	goto	u21
   389     07A6  2FA8               	goto	u20
   390     07A7                     u21:
   391     07A7  2F95               	goto	l658
   392     07A8                     u20:
   393     07A8                     l668:
   394                           
   395                           ;timer0_increase_waterfall.c: 70:                 if (PORTC > 0b00000000) {
   396     07A8  0807               	movf	7,w	;volatile
   397     07A9  1903               	btfsc	3,2
   398     07AA  2FAC               	goto	u31
   399     07AB  2FAD               	goto	u30
   400     07AC                     u31:
   401     07AC  2FB9               	goto	l672
   402     07AD                     u30:
   403     07AD                     l670:
   404                           
   405                           ;timer0_increase_waterfall.c: 75:                     PORTC = PORTC>>s;
   406     07AD  0807               	movf	7,w	;volatile
   407     07AE  00F0               	movwf	??_main
   408     07AF  0A74               	incf	main@s,w
   409     07B0  2FB3               	goto	u44
   410     07B1                     u45:
   411     07B1  1003               	clrc
   412     07B2  0CF0               	rrf	??_main,f
   413     07B3                     u44:
   414     07B3  3EFF               	addlw	-1
   415     07B4  1D03               	skipz
   416     07B5  2FB1               	goto	u45
   417     07B6  0870               	movf	??_main,w
   418     07B7  0087               	movwf	7	;volatile
   419                           
   420                           ;timer0_increase_waterfall.c: 77:                 } else {
   421     07B8  2F95               	goto	l658
   422     07B9                     l672:
   423                           
   424                           ;timer0_increase_waterfall.c: 80:                     s++;
   425     07B9  3001               	movlw	1
   426     07BA  00F0               	movwf	??_main
   427     07BB  0870               	movf	??_main,w
   428     07BC  07F4               	addwf	main@s,f
   429     07BD                     l674:
   430                           
   431                           ;timer0_increase_waterfall.c: 84:                     val = PORTC;
   432     07BD  0807               	movf	7,w	;volatile
   433     07BE  00F3               	movwf	main@val
   434                           
   435                           ;timer0_increase_waterfall.c: 90:                     switch (s) {
   436     07BF  2FDA               	goto	l698
   437     07C0                     l676:
   438                           
   439                           ;timer0_increase_waterfall.c: 92:                             PORTC = 0b11000000;
   440     07C0  30C0               	movlw	192
   441     07C1  0087               	movwf	7	;volatile
   442                           
   443                           ;timer0_increase_waterfall.c: 93:                             break;
   444     07C2  2F95               	goto	l658
   445     07C3                     l678:
   446                           
   447                           ;timer0_increase_waterfall.c: 95:                             PORTC = 0b11100000;
   448     07C3  30E0               	movlw	224
   449     07C4  0087               	movwf	7	;volatile
   450                           
   451                           ;timer0_increase_waterfall.c: 96:                             break;
   452     07C5  2F95               	goto	l658
   453     07C6                     l680:
   454                           
   455                           ;timer0_increase_waterfall.c: 98:                             PORTC = 0b11110000;
   456     07C6  30F0               	movlw	240
   457     07C7  0087               	movwf	7	;volatile
   458                           
   459                           ;timer0_increase_waterfall.c: 99:                             break;
   460     07C8  2F95               	goto	l658
   461     07C9                     l682:
   462                           
   463                           ;timer0_increase_waterfall.c: 101:                             PORTC = 0b11111000;
   464     07C9  30F8               	movlw	248
   465     07CA  0087               	movwf	7	;volatile
   466                           
   467                           ;timer0_increase_waterfall.c: 102:                             break;
   468     07CB  2F95               	goto	l658
   469     07CC                     l684:
   470                           
   471                           ;timer0_increase_waterfall.c: 104:                             PORTC = 0b11111100;
   472     07CC  30FC               	movlw	252
   473     07CD  0087               	movwf	7	;volatile
   474                           
   475                           ;timer0_increase_waterfall.c: 105:                             break;
   476     07CE  2F95               	goto	l658
   477     07CF                     l686:
   478                           
   479                           ;timer0_increase_waterfall.c: 107:                             PORTC = 0b11111110;
   480     07CF  30FE               	movlw	254
   481     07D0  0087               	movwf	7	;volatile
   482                           
   483                           ;timer0_increase_waterfall.c: 108:                             break;
   484     07D1  2F95               	goto	l658
   485     07D2                     l688:
   486                           
   487                           ;timer0_increase_waterfall.c: 119:                             PORTC = 0b11111111;
   488     07D2  30FF               	movlw	255
   489     07D3  0087               	movwf	7	;volatile
   490     07D4                     l690:
   491                           
   492                           ;timer0_increase_waterfall.c: 120:                             s = 1;
   493     07D4  01F4               	clrf	main@s
   494     07D5  0AF4               	incf	main@s,f
   495                           
   496                           ;timer0_increase_waterfall.c: 121:                             break;
   497     07D6  2F95               	goto	l658
   498     07D7                     l692:
   499                           
   500                           ;timer0_increase_waterfall.c: 126:                             PORTC = val;
   501     07D7  0873               	movf	main@val,w
   502     07D8  0087               	movwf	7	;volatile
   503     07D9  2FD4               	goto	l690
   504     07DA                     l698:
   505     07DA  0874               	movf	main@s,w
   506     07DB  00F0               	movwf	??_main
   507     07DC  01F1               	clrf	??_main+1
   508                           
   509                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   510                           ; Switch size 1, requested type "simple"
   511                           ; Number of cases is 1, Range of values is 0 to 0
   512                           ; switch strategies available:
   513                           ; Name         Instructions Cycles
   514                           ; simple_byte            4     3 (average)
   515                           ; direct_byte           11     8 (fixed)
   516                           ; jumptable            260     6 (fixed)
   517                           ;	Chosen strategy is simple_byte
   518     07DD  0871               	movf	??_main+1,w
   519     07DE  3A00               	xorlw	0	; case 0
   520     07DF  1903               	skipnz
   521     07E0  2FE2               	goto	l736
   522     07E1  2FD7               	goto	l692
   523     07E2                     l736:
   524                           
   525                           ; Switch size 1, requested type "simple"
   526                           ; Number of cases is 7, Range of values is 2 to 8
   527                           ; switch strategies available:
   528                           ; Name         Instructions Cycles
   529                           ; simple_byte           22    12 (average)
   530                           ; direct_byte           32    11 (fixed)
   531                           ; jumptable            263     9 (fixed)
   532                           ;	Chosen strategy is simple_byte
   533     07E2  0870               	movf	??_main,w
   534     07E3  3A02               	xorlw	2	; case 2
   535     07E4  1903               	skipnz
   536     07E5  2FC0               	goto	l676
   537     07E6  3A01               	xorlw	1	; case 3
   538     07E7  1903               	skipnz
   539     07E8  2FC3               	goto	l678
   540     07E9  3A07               	xorlw	7	; case 4
   541     07EA  1903               	skipnz
   542     07EB  2FC6               	goto	l680
   543     07EC  3A01               	xorlw	1	; case 5
   544     07ED  1903               	skipnz
   545     07EE  2FC9               	goto	l682
   546     07EF  3A03               	xorlw	3	; case 6
   547     07F0  1903               	skipnz
   548     07F1  2FCC               	goto	l684
   549     07F2  3A01               	xorlw	1	; case 7
   550     07F3  1903               	skipnz
   551     07F4  2FCF               	goto	l686
   552     07F5  3A0F               	xorlw	15	; case 8
   553     07F6  1903               	skipnz
   554     07F7  2FD2               	goto	l688
   555     07F8  2FD7               	goto	l692
   556     07F9  120A  118A  2800   	ljmp	start
   557     07FC                     __end_of_main:
   558     007E                     btemp	set	126	;btemp
   559     007E                     wtemp0	set	126
   560                           
   561                           	psect	idloc
   562                           
   563                           ;Config register IDLOC0 @ 0x2000
   564                           ;	unspecified, using default values
   565     2000                     	org	8192
   566     2000  3FFF               	dw	16383
   567                           
   568                           ;Config register IDLOC1 @ 0x2001
   569                           ;	unspecified, using default values
   570     2001                     	org	8193
   571     2001  3FFF               	dw	16383
   572                           
   573                           ;Config register IDLOC2 @ 0x2002
   574                           ;	unspecified, using default values
   575     2002                     	org	8194
   576     2002  3FFF               	dw	16383
   577                           
   578                           ;Config register IDLOC3 @ 0x2003
   579                           ;	unspecified, using default values
   580     2003                     	org	8195
   581     2003  3FFF               	dw	16383
   582                           
   583                           	psect	config
   584                           
   585                           ;Config register CONFIG1 @ 0x2007
   586                           ;	Oscillator Selection bits
   587                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   588                           ;	Watchdog Timer Enable bit
   589                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   590                           ;	Power-up Timer Enable bit
   591                           ;	PWRTE = ON, PWRT enabled
   592                           ;	RE3/MCLR pin function select bit
   593                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   594                           ;	Code Protection bit
   595                           ;	CP = ON, Program memory code protection is enabled
   596                           ;	Data Code Protection bit
   597                           ;	CPD = ON, Data memory code protection is enabled
   598                           ;	Brown Out Reset Selection bits
   599                           ;	BOREN = ON, BOR enabled
   600                           ;	Internal External Switchover bit
   601                           ;	IESO = ON, Internal/External Switchover mode is enabled
   602                           ;	Fail-Safe Clock Monitor Enabled bit
   603                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   604                           ;	Low Voltage Programming Enable bit
   605                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   606                           ;	In-Circuit Debugger Mode bit
   607                           ;	DEBUG = 0x1, unprogrammed default
   608     2007                     	org	8199
   609     2007  2F04               	dw	12036
   610                           
   611                           ;Config register CONFIG2 @ 0x2008
   612                           ;	Brown-out Reset Selection bit
   613                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   614                           ;	Flash Program Memory Self Write Enable bits
   615                           ;	WRT = OFF, Write protection off
   616     2008                     	org	8200
   617     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0      60
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue May 16 03:00:30 2023

                     u10 0799                       u11 0798                       u20 07A8  
                     u21 07A7                       u30 07AD                       u31 07AC  
                     u44 07B3                       u45 07B1                      l640 077E  
                    l650 0791                      l642 0781                      l634 0776  
                    l660 0799                      l652 0793                      l644 0782  
                    l636 077A                      l670 07AD                      l662 079A  
                    l654 0793                      l646 0785                      l638 077D  
                    l736 07E2                      l680 07C6                      l672 07B9  
                    l664 079E                      l656 0793                      l648 0790  
                    l690 07D4                      l682 07C9                      l674 07BD  
                    l666 07A2                      l658 0795                      l692 07D7  
                    l684 07CC                      l676 07C0                      l668 07A8  
                    l686 07CF                      l678 07C3                      l688 07D2  
                    l698 07DA                     _C1ON 083F                     _C2ON 0847  
                   _TMR0 0001                     _main 0776                     btemp 007E  
                   start 0000                    ?_main 0070                    _ANSEL 0188  
                  _PORTC 0007                    _TRISC 0087                    main@s 0074  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0070                   _ANSELH 0189  
                 _OSCCON 008F                   _TMR0IF 005A  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 0776                  main@val 0073  
   end_of_initialization 07FC      start_initialization 07FC                ___latbits 0002  
              main@count 0072               _OPTION_REG 0081  
